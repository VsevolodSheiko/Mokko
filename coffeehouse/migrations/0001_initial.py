# Generated by Django 4.2 on 2023-04-27 19:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='CoffeeShop',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=25)),
                ('city', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'coffeeshop',
                'verbose_name_plural': 'coffeeshops',
                'db_table': 'coffeeshop',
            },
        ),
        migrations.CreateModel(
            name='FreeTable',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('seats', models.IntegerField()),
                ('is_available', models.BooleanField()),
                ('coffeeshop', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.coffeeshop')),
            ],
            options={
                'verbose_name': 'freetable',
                'verbose_name_plural': 'freetables',
                'db_table': 'freetable',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=50)),
                ('price_per_unit', models.FloatField(default=0.0)),
            ],
            options={
                'verbose_name': 'ingredient',
                'verbose_name_plural': 'ingredients',
                'db_table': 'ingredient',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=15)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.freetable')),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('price', models.FloatField(default=0.0)),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.category')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=50)),
            ],
            options={
                'verbose_name': 'visitor',
                'verbose_name_plural': 'visitors',
                'db_table': 'visitor',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('context', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.product')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.visitor')),
            ],
            options={
                'verbose_name': 'review',
                'verbose_name_plural': 'reviews',
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('discount', models.IntegerField()),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.product')),
            ],
            options={
                'verbose_name': 'promotion',
                'verbose_name_plural': 'promotions',
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.product')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='coffeehouse.order')),
                ('unit_price', models.ManyToManyField(related_name='products', to='coffeehouse.product')),
            ],
            options={
                'verbose_name': 'orderitem',
                'verbose_name_plural': 'orderitems',
                'db_table': 'orderitem',
            },
        ),
    ]
